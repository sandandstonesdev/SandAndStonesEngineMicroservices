name: build-and-deploy
on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build_backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Build Asset.Api with dotnet
        run: dotnet build ./SandAndStones.Asset.Api/SandAndStones.Asset.Api.csproj --configuration Debug

      - name: dotnet publish Asset.Api
        run: dotnet publish ./SandAndStones.Asset.Api/SandAndStones.Asset.Api.csproj -c Debug -o "${{env.DOTNET_ROOT}}/asset-api"

      - name: Build Texture.Api with dotnet
        run: dotnet build ./SandAndStones.Texture.Api/SandAndStones.Texture.Api.csproj --configuration Debug

      - name: dotnet publish Texture.Api
        run: dotnet publish ./SandAndStones.Texture.Api/SandAndStones.Texture.Api.csproj -c Debug -o "${{env.DOTNET_ROOT}}/texture-api"

      - name: Build Gateway.Api with dotnet
        run: dotnet build ./SandAndStones.Gateway.Api/SandAndStones.Gateway.Api.csproj --configuration Debug

      - name: dotnet publish Gateway.Api
        run: dotnet publish ./SandAndStones.Gateway.Api/SandAndStones.Gateway.Api.csproj -c Debug -o "${{env.DOTNET_ROOT}}/gateway-api"

      - name: dotnet publish EventLog.Api
        run: dotnet publish ./SandAndStones.EventLog.Api/SandAndStones.EventLog.Api.csproj -c Debug -o "${{env.DOTNET_ROOT}}/eventlog-api"

  build_frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: npm install, build
        working-directory: ./SandAndStones.ClientApp
        run: | 
          npm ci
          npm run build --if-present
