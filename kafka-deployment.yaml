apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:3.6
        ports:
        - containerPort: 9092
        - containerPort: 29092
        env:
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_CFG_LISTENERS
          value: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: INTERNAL://kafka:9092,EXTERNAL://<your-external-ip>:29092
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: INTERNAL
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        - name: KAFKA_CFG_CREATE_TOPICS
          value: "input-asset:1:1"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: 'yes'
        volumeMounts:
        - name: kafka-data
          mountPath: /bitnami
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  type: LoadBalancer
  ports:
  - port: 9092
    targetPort: 9092
  - port: 29092
    targetPort: 29092
  selector:
    app: kafka